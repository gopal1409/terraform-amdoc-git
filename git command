####to do version control
###first we will create two global varaible. whenever you will upload the code to a repo automatically the global varaible will be applied
git config --global user.name "gopal"
git config --global user.email "gopal1409@gmail.com"
###next we will create a directory inside the directory we will have all our code. 
cd ..
mkdir test
########
git status
####this will show you that git is not managing the folder
###to manage the folder we will give a command 
git init
##3git init will create a folder .git inside the .git folder we will have all the refrence
##3importance of .git folder

  510  git status
  511  git init
  512  git status
  513  ls
  514  ls -a
  515  rm -rf .git
  516  git status
  517  git init
  518  cd .git
  519  ls
  520  history
  521  cd ..
###lets do our first commit
  524  touch main.tf
  525  touch varaible.tf
  526  touch dev.auto.tf
  527  touch auth.tf
  528  git status
  529  git add dev.auto.tf main.tf varaible.tf
  530  git status
  531  git commit -m "terraform intialization"
  532  git log
  533  git status
###make change and see the difference
553  git status
  554  notepad dev.auto.tf
  555  git status
  556  git add dev.auto.tf
  557  git status
  558  git commit -m "modified dev.auto file"
  559  git log
 
  561  notepad dev.auto.tf
  562  git status
###this diff command you can use it to view the difference between previous commint and the changes your are doing it
  563  git diff dev.auto.tf
  
  565  git add dev.auto.tf
  566  git commit -m "modified the file"

###ignore and reset
 575  git add .
  576  git status
  577  git add -A
  578  git status
  579  git reset
  580  git status
  581  notepad .gitignore
###on top of te gitignore file put the file name which you want to ignore. 
###also check the file name it should not have any extension
ls
  582  git status
  583  mv .gitignore.txt .gitignore
  584  git status
  586  git add .
  587  git status
  588  git commit -m "ignore exercise"
  589  git status
  590  lsa
  591  ls



