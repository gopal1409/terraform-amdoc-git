# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: default
 # vmImage: ubuntu-latest
variables:
  backendServiceArm: 'project-principal'
  backendAzureRmResourceGroupName: 'gopal-rg'
  backendAzureRmStorageAccountName: 'gopalstoraget'
  backendAzureRmContainerName: 'terraformc'
  backendAzureRmKey: 'project.tfstate'
stages:
  - stage: tfdstroy
    jobs:
        - job: destroy
          steps:
            - task: TerraformInstaller@1
              displayName: tfinstall
              inputs:
                terraformVersion: 'latest'
            - task: TerraformTaskV4@4
              displayName: tfinit
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: '$(backendServiceArm)'
                backendAzureRmResourceGroupName: 'gopa-rg'
                backendAzureRmStorageAccountName: 'gopalsac'
                backendAzureRmContainerName: 'terraform'
                backendAzureRmKey: '$(backendAzureRmKey)'
            - task: TerraformTaskV4@4
              displayName: tfdestroy
              inputs:
                provider: 'azurerm'
                command: 'destroy'
                environmentServiceNameAzureRM: '$(backendServiceArm)'
